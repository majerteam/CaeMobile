#:import SlideTransition kivy.uix.screenmanager.SlideTransition
#:set small_button_height '40sp'

BoxLayout:
    orientation: 'vertical'
    BoxLayout:
        size_hint_y: None
        height: '30sp'

        MenuButton:
            source: 'data/sync.png'
            # XXX find a nice way to update this in UI
            text: 'sync (%s)' % (app.settings and len(app.settings.items('tosync')) or 0)
            on_press: app.sync(*args)
            disabled: not app.settings or not len(app.settings.items('tosync'))

        MenuButton:
            source: 'data/icon.png'

        MenuButton:
            source: 'data/icon.png'

    ScreenManager:
        opacity: 0.9
        transition: SlideTransition()

        MenuScreen:
            name: 'menu'

        AddScreen:
            name: 'add'

        BacklogScreen:
            name: 'backlog'

        SettingsScreen:
            name: 'settings'


<MenuButton@Button>:
    source: ''
    text: ''
    color: 0, 0, 0, 0

    BoxLayout:
        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size

        height: .9 * root.height
        center_y: root.center_y
        x: root.x + sp(2)

        Image:
            source: root.source
            size_hint_x: None
            width: self.texture_size[0]

        Label:
            text: root.text
            size_hint_x: None
            width: self.texture_size[0]

<MenuScreen@Screen>:
    BoxLayout:
        size_hint: .9, .9
        pos_hint: {'center_x': .5, 'center_y': .5}
        orientation: 'vertical'

        Label:
            canvas.before:
                Color:
                    rgba: 0.7, 0.2, 0.35, 1.0
                Rectangle:
                    pos: self.pos
                    size: self.size

            text: 'Notes de frais'

        Widget:
            size_hint_y: None
            height: small_button_height
        Button:
            text: 'Ajouter'
            on_press:
                root.manager.transition.direction = 'left'
                root.manager.current = 'add'

        Widget:
            size_hint_y: None
            height: small_button_height
        Button:
            text: 'Voir'
            on_press:
                root.manager.transition.direction = 'right'
                root.manager.current = 'backlog'
        Widget:
            size_hint_y: None
            height: small_button_height
        Button:
            text: 'Settings'
            on_press:
                root.manager.transition.direction = 'down'
                root.manager.current = 'settings'

<SettingsScreen@Screen>:
    BoxLayout:
        orientation: 'vertical'
        Button:
            size_hint_y: None
            height: small_button_height
            text: 'Retour'
            on_press:
                root.manager.transition.direction = 'up'
                root.manager.current = 'menu'

        GridLayout:
            cols: 2
            Widget:
            Widget:
            Label:
                text: 'Serveur'
                size_hint_y: None
                height: small_button_height
            TextInput:
                multiline: False
                size_hint_y: None
                height: small_button_height
                text: app.settings and app.settings.get('settings', 'server') or ''
                on_text_validate:
                    app.settings.set('settings', 'server', args[0].text)
                    login.focus = True
            Label:
                text: 'login'
                size_hint_y: None
                height: small_button_height
            TextInput:
                id: login
                multiline: False
                size_hint_y: None
                height: small_button_height
                text: app.settings and app.settings.get('settings', 'login') or ''
                on_text_validate:
                    app.settings.set('settings', 'login', args[0].text)
                    password.focus = True

            Label:
                size_hint_y: None
                height: small_button_height
                text: 'password'
            TextInput:
                id: password
                size_hint_y: None
                height: small_button_height
                multiline: False
                text: app.settings and app.settings.get('settings', 'password') or ''
                on_text_validate:
                    app.settings.set('settings', 'password', args[0].text)

                password: True

            Label:
                size_hint_y: None
                height: small_button_height
                text: 'sync on wifi only'
            Switch:
                size_hint_y: None
                height: small_button_height
                active: app.settings and app.settings.get('settings', 'sync_wifi') == 'True' or False
                on_active: app.settings.set('settings', 'sync_wifi', str(args[1]))
            Widget:
            Widget:


<AddScreen>:
    ndf_type: spinner_type.text
    BoxLayout:
        orientation: 'vertical'
        Button:
            size_hint_y: None
            height: small_button_height
            text: 'Retour'
            on_press:
                root.manager.transition.direction = 'right'
                root.manager.current = 'menu'
        Widget:
            size_hint_y: None
            height: small_button_height

        Spinner:
            size_hint_y: None
            height: small_button_height
            id: spinner_type
            text: 'type'
            values: 'km', 'tel', 'autre'

        Widget:

<BacklogScreen@Screen>:
    BoxLayout:
        orientation: 'vertical'
        Button:
            size_hint_y: None
            height: small_button_height
            text: 'Retour'
            on_press:
                root.manager.transition.direction = 'left'
                root.manager.current = 'menu'

        ListView:
            adapter: app.datalist_adapter

<SyncPopup>:
    size_hint: .9, .5
    title: 'syncing'
    auto_dismiss: False

    BoxLayout:
        orientation: 'vertical'
        Label:
            text: '%s/%s' % (root.progress, len(app.settings.items('tosync')))

        Widget:
            size_hint_y: None
            height: '30sp'
            canvas:
                Color:
                    rgba: 1, 1, 1, 1
                Rectangle:
                    pos: self.pos
                    size: self.size

                Color:
                    rgba: .5, .5, .5, 1
                Rectangle:
                    pos: self.x + 4, self.y + 4
                    size:
                        (
                        (self.width - 8) * (root.progress / len(app.settings.items('tosync'))),
                        self.height - 8
                        )
        Button:
            text: 'errors: %s' % len(root.errors)
            # XXX do some error display

        Button:
            activated: root.done
            text: 'Ok'

        ScrollView:
            GridLayout:
                height: self.minimum_height
                size_hint_y: None
                cols: 1

                Label:
                    text: ''.join(unicode(x) for x in root.errors)
                    height: 2 * self.texture_size[1]
